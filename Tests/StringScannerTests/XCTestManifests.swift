#if !canImport(ObjectiveC)
import XCTest

extension StringContainableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringContainableTests = [
        ("testItCanJoinContainable", testItCanJoinContainable),
        ("testThatItMatchAllLetters", testThatItMatchAllLetters),
        ("testThatItMatchAlphaNumericLetters", testThatItMatchAlphaNumericLetters),
        ("testThatItMatchCapitalLetters", testThatItMatchCapitalLetters),
        ("testThatItMatchCharactersInString", testThatItMatchCharactersInString),
        ("testThatItMatchNumbersLetters", testThatItMatchNumbersLetters),
        ("testThatItMatchSmallLetters", testThatItMatchSmallLetters),
        ("testThatItMatchSpaceLetters", testThatItMatchSpaceLetters),
    ]
}

extension StringScannerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringScannerTests = [
        ("testCanScanForCharacters", testCanScanForCharacters),
        ("testItCanDoTransactions", testItCanDoTransactions),
        ("testItCanDropAndPeek", testItCanDropAndPeek),
        ("testItCanPeekAndNotProgress", testItCanPeekAndNotProgress),
        ("testItCanPeekAndScanProgress", testItCanPeekAndScanProgress),
        ("testItCanPeekForString", testItCanPeekForString),
        ("testItCanPeekRange", testItCanPeekRange),
        ("testItCanPeekUntilAPattern", testItCanPeekUntilAPattern),
        ("testItCanPeekUntilAString", testItCanPeekUntilAString),
        ("testItCanPeekUntilRange", testItCanPeekUntilRange),
        ("testItCanRestTheScanner", testItCanRestTheScanner),
        ("testItCanScanForString", testItCanScanForString),
        ("testItCanScanForStringToRange", testItCanScanForStringToRange),
        ("testItCanScanForStringUntilRange", testItCanScanForStringUntilRange),
        ("testItCanScanUntilAPattern", testItCanScanUntilAPattern),
        ("testItCanScanUntilAString", testItCanScanUntilAString),
        ("testItCanScanUntilAStringAndTheEnd", testItCanScanUntilAStringAndTheEnd),
        ("testItCantDropAfterStringEnd", testItCantDropAfterStringEnd),
        ("testItDoesNotCrashIfItPeeksForNonFoundString", testItDoesNotCrashIfItPeeksForNonFoundString),
        ("testItDoesNotCrashIfItPeeksForNonFoundStringInRange", testItDoesNotCrashIfItPeeksForNonFoundStringInRange),
        ("testItDoesNotCrashIfItPeeksForNonFoundStringToRange", testItDoesNotCrashIfItPeeksForNonFoundStringToRange),
        ("testItDoesNotCrashIfItScanForNonFoundString", testItDoesNotCrashIfItScanForNonFoundString),
        ("testItDoesNotCrashIfItScanForNonFoundStringForRange", testItDoesNotCrashIfItScanForNonFoundStringForRange),
        ("testItDoesNotCrashIfItScanForNonFoundStringToRange", testItDoesNotCrashIfItScanForNonFoundStringToRange),
        ("testItDoesNotScanBeyondLength", testItDoesNotScanBeyondLength),
        ("testItDoesNotScanBeyondLengthForRange", testItDoesNotScanBeyondLengthForRange),
        ("testItDoesNotScanBeyondLengthToRange", testItDoesNotScanBeyondLengthToRange),
        ("testItKeepsScanning", testItKeepsScanning),
        ("testItReturnEndIfOverScan", testItReturnEndIfOverScan),
        ("testItReturnsEmptyString", testItReturnsEmptyString),
        ("testItScansToTheLast", testItScansToTheLast),
    ]
}

extension StringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringTests = [
        ("testItCanCheckForPrefix", testItCanCheckForPrefix),
        ("testItCanGetAStringWithRange", testItCanGetAStringWithRange),
        ("testItCanGetTheSubStringFromIndex", testItCanGetTheSubStringFromIndex),
        ("testItCanGetTheSubStringToIndex", testItCanGetTheSubStringToIndex),
        ("testItReturnNilIfNotFound", testItReturnNilIfNotFound),
        ("testItSearchesForAString", testItSearchesForAString),
        ("testItSearchesForAStringAtEnd", testItSearchesForAStringAtEnd),
        ("testItSearchesForAStringAtStart", testItSearchesForAStringAtStart),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(StringContainableTests.__allTests__StringContainableTests),
        testCase(StringScannerTests.__allTests__StringScannerTests),
        testCase(StringTests.__allTests__StringTests),
    ]
}
#endif
